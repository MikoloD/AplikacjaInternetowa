@model App.Models.IssueModel
@{
    ViewData["Title"] = "Index";
}
<div class="container justify-content-center">
    <h1>Zgłoś problem</h1>
    <div class="row">
        <div class="col-md-5">
            <form asp-action="Index" class="justify-content-center">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea id="desc" asp-for="Description" class="form-control"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input id="lat" type="hidden" asp-for="Latitude" class="form-control" />
                </div>
                <div class="form-group">
                    <input id="lon" type="hidden" asp-for="Longitude" class="form-control" />
                </div>
                @for (int i = 0; i < 3; i++)
                {
                    <input type="file" id="upload" asp-for="Images[i].Image" class="form-control my-3" />
                }
                <div class="form-group my-3 text-center">
                    <input type="submit" value="Zgłoś" class="btn btn-primary" asp-action="AddIssue" />
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                document.getElementById("desc").setAttribute('value', "Geolocation is not supported by this browser.");
            }
        }
        function showPosition(position) {
            document.getElementById("lat").value = parseFloat(position.coords.latitude);
            document.getElementById("lon").value = parseFloat(position.coords.longitude);
        }
        $(window).on('load', function () {
            getLocation();
        })
                ////resize
                //var prevcavas = "";
                //var blobs = [];
                //blobs[0] = null;
                //blobs[1] = null;
                //blobs[2] = null;
                //window.ResizePhotos = function (imgno, url) {
                //    // Read in file
                //    var file = event.target.files[0];
                //    prevcavas = event.target.getAttribute('data-preview');
                //    // Ensure it's an image
                //    if (file.type.match(/image.*/)) {
                //        console.log('Dodano zdjęcie');
                //        $('#out').html("");
                //        $('#out').append("Dodano nowe zdjęcie do zdarzenia\n");
                //        // Load the image
                //        var reader = new FileReader();
                //        reader.onload = function (readerEvent) {
                //            var image = new Image();
                //            $('#out').append("przygotowuję obraz do wysyłki...\n");
                //            image.onload = function (imageEvent) {
                //                $('#out').append("zmniejszam rozmiar obrazu...\n");
                //                // Resize the image
                //                var canvas = document.createElement('canvas'),
                //                    max_size = 1600,// TODO : pull max size from a site config
                //                    width = image.width,
                //                    height = image.height;
                //                if (width > height) {
                //                    if (width > max_size) {
                //                        height *= max_size / width;
                //                        width = max_size;
                //                    }
                //                } else {
                //                    if (height > max_size) {
                //                        width *= max_size / height;
                //                        height = max_size;
                //                    }
                //                }
                //                canvas.width = width;
                //                canvas.height = height;
                //                canvas.getContext('2d').drawImage(image, 0, 0, width, height);
                //                var dataUrl = canvas.toDataURL('image/jpeg', 0.30); // poziom kompresji
                //                var resizedImage = dataURLToBlob(dataUrl);


                //                $('#Take' + prevcavas + 'Link').hide();
                //                $('#Take' + prevcavas + 'LinkShow').show();
                //                var preview = document.getElementById(prevcavas);
                //                preview.width = 72;
                //                preview.height = 72;
                //                prevctx = preview.getContext('2d').drawImage(image, 0, 0, image.width, image.height,     // source rectangle
                //                    0, 0, preview.width, preview.height);// destination rectangle

                //                $('#out').append("Obraz " + (imgno + 1) + " został pomniejszony.\n");
                //                $.event.trigger({
                //                    type: "imageResized",
                //                    blob: resizedImage,
                //                    imgnr: imgno,
                //                    url: dataUrl
                //                });
                //            }
                //            image.src = readerEvent.target.result;
                //        }
                //        reader.readAsDataURL(file);
                //    }
                //};

                ///* Utility function to convert a canvas to a BLOB */
                //var dataURLToBlob = function (dataURL) {
                //    var BASE64_MARKER = ';base64,';
                //    if (dataURL.indexOf(BASE64_MARKER) == -1) {
                //        var parts = dataURL.split(',');
                //        var contentType = parts[0].split(':')[1];
                //        var raw = parts[1];

                //        return new Blob([raw], { type: contentType });
                //    }

                //    var parts = dataURL.split(BASE64_MARKER);
                //    var contentType = parts[0].split(':')[1];
                //    var raw = window.atob(parts[1]);
                //    var rawLength = raw.length;

                //    var uInt8Array = new Uint8Array(rawLength);

                //    for (var i = 0; i < rawLength; ++i) {
                //        uInt8Array[i] = raw.charCodeAt(i);
                //    }

                //    return new Blob([uInt8Array], { type: contentType });
                //}
                ///* End Utility function to convert a canvas to a BLOB      */

                ///* Handle image resized events */
                //$(document).on("imageResized", function (event) {
                //    blobs[event.imgnr] = event.blob;
                //})
    </script>

}